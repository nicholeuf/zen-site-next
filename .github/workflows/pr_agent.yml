name: Qodo PR Automation

on:
  pull_request_target:
    types: [opened, ready_for_review, synchronize]
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  # Changelog update specifically for ready_for_review
  qodo-changelog-update:
    runs-on: ubuntu-latest
    steps:
      - name: Debug workflow trigger
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Event action: ${{ github.event.action }}"
          echo "PR number: ${{ github.event.pull_request.number }}"
          echo "PR state: ${{ github.event.pull_request.state }}"
          echo "PR draft: ${{ github.event.pull_request.draft }}"
          echo "PR URL: ${{ github.event.pull_request.html_url }}"
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        name: Install pnpm
      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'pnpm'

      - name: Update Changelog with Qodo CLI
        if: github.event.action == 'ready_for_review'
        run: |
          # Install Qodo CLI
          pnpm add -g @qodo/command

          # Create .qodo directory if it doesn't exist
          mkdir -p ~/.qodo

          # Create file with secret content
          echo "${{ secrets.QODO_API_KEY }}" > ~/.qodo/auth.key
          chmod 600 ~/.qodo/auth.key

          # Get PR URL
          PR_URL="${{ github.event.pull_request.html_url }}"

          # Run Qodo command
          qodo update_changelog --pr_url=$PR_URL

          # Clean up
          rm -f ~/.qodo/auth.key
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
